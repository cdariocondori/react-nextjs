{"ast":null,"code":"var _jsxFileName = \"D:\\\\clientes\\\\infocasas\\\\infocasas-frontend-challenge\\\\pages\\\\task\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-fetch';\n\nconst Task = props => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  console.log(\"obj \", props);\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }\n  }, \" profile \");\n};\n\nTask.getInitialProps = async ctx => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts/' + ctx.query.id);\n  const resJSON = await res.json();\n  return {\n    user: resJSON.data\n  };\n};\n\nexport default Task;","map":{"version":3,"sources":["D:/clientes/infocasas/infocasas-frontend-challenge/pages/task/[id].js"],"names":["useRouter","fetch","Task","props","router","id","query","console","log","getInitialProps","ctx","res","resJSON","json","user","data"],"mappings":";;;AAAA,SAAQA,SAAR,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAS;AAElB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAACK,IAAAA;AAAD,MAAOD,MAAM,CAACE,KAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,KAApB;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH,CAND;;AAOAD,IAAI,CAACO,eAAL,GAAqB,MAAMC,GAAN,IAAY;AAC9B,QAAMC,GAAG,GAAE,MAAMV,KAAK,CAAE,gDAA8CS,GAAG,CAACJ,KAAJ,CAAUD,EAA1D,CAAtB;AACA,QAAMO,OAAO,GAAE,MAAMD,GAAG,CAACE,IAAJ,EAArB;AACC,SAAO;AAACC,IAAAA,IAAI,EAACF,OAAO,CAACG;AAAd,GAAP;AACH,CAJD;;AAKA,eAAeb,IAAf","sourcesContent":["import {useRouter}  from 'next/router'\r\nimport fetch from 'isomorphic-fetch'\r\nconst Task = (props)=>{\r\n\r\n    const router = useRouter();\r\n    const {id} = router.query;\r\n    console.log(\"obj \", props);\r\n    return <h1> profile </h1>\r\n}\r\nTask.getInitialProps=async(ctx)=>{\r\n   const res =await fetch ('https://jsonplaceholder.typicode.com/posts/'+ctx.query.id)\r\n   const resJSON =await res.json();\r\n    return {user:resJSON.data}\r\n}\r\nexport default Task;"]},"metadata":{},"sourceType":"module"}