{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\clientes\\\\infocasas\\\\infocasas-frontend-challenge\\\\pages\\\\task\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-fetch';\n\nvar Task = function Task() {\n  _s();\n\n  var router = useRouter();\n  var obj = router.query;\n  console.log(\"obj \", obj);\n  return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }\n  }, \" profile \");\n};\n\n_s(Task, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Task;\n\nTask.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, resJSON;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://jsonplaceholder.typicode.com/posts/' + ctx.query.id);\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            resJSON = _context.sent;\n            return _context.abrupt(\"return\", {});\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["D:/clientes/infocasas/infocasas-frontend-challenge/pages/task/[id].js"],"names":["useRouter","fetch","Task","router","obj","query","console","log","getInitialProps","ctx","id","res","json","resJSON"],"mappings":";;;;;;;;;AAAA,SAAQA,SAAR,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAI;AAAA;;AACb,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,MAAMI,GAAG,GAAGD,MAAM,CAACE,KAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,GAApB;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH,CALD;;GAAMF,I;UACaF,S;;;KADbE,I;;AAMNA,IAAI,CAACM,eAAL;AAAA,sEAAqB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDR,KAAK,CAAE,gDAA8CQ,GAAG,CAACJ,KAAJ,CAAUK,EAA1D,CADJ;;AAAA;AACZC,YAAAA,GADY;AAAA;AAAA,mBAEGA,GAAG,CAACC,IAAJ,EAFH;;AAAA;AAEZC,YAAAA,OAFY;AAAA,6CAGV,EAHU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeX,IAAf","sourcesContent":["import {useRouter}  from 'next/router'\r\nimport fetch from 'isomorphic-fetch'\r\nconst Task = ()=>{\r\n    const router = useRouter();\r\n    const obj = router.query;\r\n    console.log(\"obj \", obj);\r\n    return <h1> profile </h1>\r\n}\r\nTask.getInitialProps=async(ctx)=>{\r\n   const res =await fetch ('https://jsonplaceholder.typicode.com/posts/'+ctx.query.id)\r\n   const resJSON =await res.json();\r\n    return {}\r\n}\r\nexport default Task;"]},"metadata":{},"sourceType":"module"}